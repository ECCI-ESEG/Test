name: Build
on:
  push:
    branches:
      - master  # o el nombre de tu rama principal

jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Los clones superficiales deben estar desactivados para una mejor relevancia del análisis
      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necesario para obtener información de PR, si la hay
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner begin /k:"ECCI-ESEG_Test_AZLEs-kFPzDIfHMrPBLz" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          ~/.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
